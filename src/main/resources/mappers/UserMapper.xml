<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dev.shyoon.matzip.mappers.UserMapper">
    <insert id="insertRegisterContactCode"
            useGeneratedKeys="true"
            keyColumn="index"
            keyProperty="index"
            parameterType="dev.shyoon.matzip.entities.RegisterContactCodeEntity">
        INSERT INTO `matzip`.`register_contact_codes`(`contact`, `code`, `salt`, `created_at`, `expires_at`, `expired_flag`)
        VALUES (#{contact},
                #{code},
                #{salt},
                IFNULL(#{createdAt}, DEFAULT(`created_at`)),
                #{expiresAt},
                IFNULL(#{isExpired}, DEFAULT(`expired_flag`)))
    </insert>


    <select id="selectUserByContact"
            resultType="dev.shyoon.matzip.entities.UserEntity">
        SELECT `email`         AS `email`,
               `password`      AS `password`,
               `nickname`      AS `nickname`,
               `contact`       AS `contact`,
               `status`        AS `status`,
               `admin_flag`    AS `isAdmin`,
               `registered_at` AS `registeredAt`
        FROM `matzip`.`users`
        WHERE BINARY `contact` = #{contact}
        LIMIT 1
    </select>

<!--    <select id="selectContactVerify"-->
<!--            parameterType="dev.shyoon.matzip.entities.RegisterContactCodeEntity"-->
<!--            resultType="dev.shyoon.matzip.entities.RegisterContactCodeEntity">-->
<!--        SELECT `index`        AS `index`,-->
<!--               `contact`      AS `contact`,-->
<!--               `code`         AS `code`,-->
<!--               `salt`         AS `salt`,-->
<!--               `created_at`   AS `createdAt`,-->
<!--               `expires_at`   AS `expiresAt`,-->
<!--               `expired_flag` AS `isExpired`-->
<!--        FROM `matzip`.`register_contact_codes`-->
<!--        WHERE BINARY `contact` = #{contact}-->
<!--          AND BINARY `code` = #{code}-->
<!--          AND BINARY `salt` = #{salt}-->
<!--        LIMIT 1-->
<!--    </select>-->

    <update id="updateRegisterCode"
            parameterType="dev.shyoon.matzip.entities.RegisterContactCodeEntity">
        UPDATE `matzip`.`register_contact_codes`
        SET `contact` =#{contact},
            `code` = #{code},
            `salt` = #{salt},
            `created_at` = #{createdAt},
            `expires_at` = #{expiresAt},
            `expired_flag` = #{isExpired}
        WHERE `index`=#{index}
        LIMIT 1
    </update>

    <select id="selectRegisterContactCodeByContactSalt"
            parameterType="dev.shyoon.matzip.entities.RegisterContactCodeEntity"
            resultType="dev.shyoon.matzip.entities.RegisterContactCodeEntity">
    SELECT `index`        AS `index`,
    `contact`      AS `contact`,
    `code`         AS `code`,
    `salt`         AS `salt`,
    `created_at`   AS `createdAt`,
    `expires_at`   AS `expiresAt`,
    `expired_flag` AS `isExpired`
    FROM `matzip`.`register_contact_codes`
    WHERE BINARY `contact` = #{contact}
    AND BINARY `code` = #{code}
    AND BINARY `salt` = #{salt}
    LIMIT 1
    </select>

    <select id="selectUserByEmail"
            resultType="dev.shyoon.matzip.entities.UserEntity">
        SELECT `email`         AS `email`,
               `password`      AS `password`,
               `nickname`      AS `nickname`,
               `contact`       AS `contact`,
               `status`        AS `status`,
               `admin_flag`    AS `isAdmin`,
               `registered_at` AS `registeredAt`
        FROM `matzip`.`users`
        WHERE BINARY `email` = #{email}
        LIMIT 1
    </select>

    <select id="selectUserByNickname"
            resultType="dev.shyoon.matzip.entities.UserEntity">
        SELECT `email`         AS `email`,
               `password`      AS `password`,
               `nickname`      AS `nickname`,
               `contact`       AS `contact`,
               `status`        AS `status`,
               `admin_flag`    AS `isAdmin`,
               `registered_at` AS `registeredAt`
        FROM `matzip`.`users`
        WHERE BINARY `nickname` = #{nickname}
        LIMIT 1
    </select>

</mapper>